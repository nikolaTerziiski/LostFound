"""init schema

Revision ID: d0e65b58b54d
Revises: 
Create Date: 2025-08-17 20:04:54.117895

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'd0e65b58b54d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category')),
    sa.UniqueConstraint('name', name=op.f('uq_category_name'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role_enum', sa.Enum('USER', 'ADMIN', name='role'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email'))
    )
    op.create_table('listing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('LOST', 'FOUND', 'RETURNED', name='status'), nullable=False),
    sa.Column('coordinateX', sa.Float(), nullable=True),
    sa.Column('coordinateY', sa.Float(), nullable=True),
    sa.Column('image_path', sa.String(length=255), nullable=True),
    sa.Column('location_name', sa.String(length=255), nullable=True),
    sa.Column('date_event', sa.Date(), nullable=False),
    sa.Column('contact_name', sa.String(length=120), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('contact_phone', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_listing_category_id_category')),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_listing_owner_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_listing'))
    )
    with op.batch_alter_table('listing', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_listing_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_listing_coordinateX'), ['coordinateX'], unique=False)
        batch_op.create_index(batch_op.f('ix_listing_coordinateY'), ['coordinateY'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('listing', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_listing_coordinateY'))
        batch_op.drop_index(batch_op.f('ix_listing_coordinateX'))
        batch_op.drop_index(batch_op.f('ix_listing_category_id'))

    op.drop_table('listing')
    op.drop_table('user')
    op.drop_table('category')
    # ### end Alembic commands ###
